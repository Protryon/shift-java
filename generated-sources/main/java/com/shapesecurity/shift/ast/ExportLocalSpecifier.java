// Generated by src/generate-spec-java.js 

/*
 * Copyright 2015 Shape Security, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.shapesecurity.shift.ast;

import org.jetbrains.annotations.NotNull;
import com.shapesecurity.functional.data.HashCodeBuilder;
import com.shapesecurity.functional.data.Maybe;

public class ExportLocalSpecifier implements Node {

  @NotNull
  public final IdentifierExpression name;

  @NotNull
  public final Maybe<String> exportedName;

  public ExportLocalSpecifier (@NotNull IdentifierExpression name, @NotNull Maybe<String> exportedName)
  {
    super();
    this.name = name;
    this.exportedName = exportedName;
  }

  @Override
  public boolean equals(Object object)
  {
    return object instanceof ExportLocalSpecifier && this.name.equals(((ExportLocalSpecifier) object).name) && this.exportedName.equals(((ExportLocalSpecifier) object).exportedName);
  }

  @Override
  public int hashCode()
  {
    int code = HashCodeBuilder.put(0, "ExportLocalSpecifier");
    code = HashCodeBuilder.put(code, this.name);
    code = HashCodeBuilder.put(code, this.exportedName);
    return code;
  }

  @NotNull
  public IdentifierExpression getName()
  {
    return this.name;
  }

  @NotNull
  public Maybe<String> getExportedName()
  {
    return this.exportedName;
  }

  @NotNull
  public ExportLocalSpecifier setName(@NotNull IdentifierExpression name)
  {
    return new ExportLocalSpecifier(name, this.exportedName);
  }

  @NotNull
  public ExportLocalSpecifier setExportedName(@NotNull Maybe<String> exportedName)
  {
    return new ExportLocalSpecifier(this.name, exportedName);
  }

}